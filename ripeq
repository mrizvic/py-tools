#!/usr/bin/env python
import sys
import os
import urllib2
import json
import colors


def print_header(title):

    half = (79 - len(title)) / 2
    side = half - 2
    print '#%s%s%s#' % ('-' * side, '-' * len(title), '-' * side)
    print '#%s%s%s#' % (' ' * side, title, ' ' * side)
    print '#%s%s%s#' % ('-' * side, '-' * len(title), '-' * side)

def usage():

	print 'Usage:', os.path.basename(__file__), 'search [type]'
	print '\tsearch: can be x.x.x.x, x.x.x.x/xx, x.x/x, telco name, AS5906'
	print '\ttype: can be one of inetnum, organisation, role, route6, domain'
	sys.exit(0)

try:
	ripe_search = sys.argv[1]
except IndexError:
	usage()

try:
	ripe_type = sys.argv[2]
except IndexError:
	ripe_type = 'all'

# ripe: request
ripe_base  = 'http://apps.db.ripe.net/whois/search.json?source=ripe&query-string=%s&flags=d' % ripe_search
ripe_client = urllib2.build_opener()
ripe_client.addheaders.append(('Accept', 'application/json'))

# ripe: response
try:
    print 'Contacting', ripe_base
    ripe_response = ripe_client.open(ripe_base)
except urllib2.HTTPError as e:
    sys.exit("RIPE responded with %s" % e)

# handle non-json response
if ripe_response.headers.get('Content-Type') != 'application/json':
    print 'Not handling non-json content'
    print ripe_response.info()
    sys.exit("Bailing out")

# read it
ripe_json = ripe_response.read()
ripe_dict = json.loads(ripe_json)

# setup colors
color_magenta = [
    'role',
]
color_cyan = [
    'inetnum',
    'inet6num'
]
color_blue = [
    'domain'
]
color_yellow = [
    'route',
    'route6'
]
color_green = [
    'organisation'
]
dont_display = [
    'admin-c',
    'tech-c',
    'zone-c',
    'address',
    'remarks'
]

# print it
print '%-16s %s' % ('attribute', 'value')
for obj in ripe_dict['whois-resources']['objects']['object']:



    if ripe_type == 'all':
        pass
    else:

        if ripe_type != obj['type']:
            continue
        
    print_header(obj['type'])

    for attributes in obj['attributes']['attribute']:

        name = attributes['name']
        value = attributes['value']


        #if name in dont_display: continue

        if obj['type'] in color_blue:

            print '%s%-16s %s%s' % (colors.Color.BLUE, name, value, colors.Color.END)

        elif obj['type'] in color_yellow:

            print '%s%-16s %s%s' % (colors.Color.YELLOW, name, value, colors.Color.END)
            
        elif obj['type'] in color_green:

            print '%s%-16s %s%s' % (colors.Color.GREEN, name, value, colors.Color.END)

        elif obj['type'] in color_cyan:

            print '%s%-16s %s%s' % (colors.Color.CYAN, name, value, colors.Color.END)

        elif obj['type'] in color_magenta:

            print '%s%-16s %s%s' % (colors.Color.MAGENTA, name, value, colors.Color.END)
        else:

            print '%-16s %s' % (name, value)



